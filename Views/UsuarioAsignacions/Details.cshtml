@using InventarioTI.Context
@using InventarioTI.Models.EXT_WEB
@using InventarioTI.Tools
@using Newtonsoft.Json
@model InventarioTI.Models.UsuarioAsignacion

@{
    ViewData["Title"] = "Details";
    InventarioContext context = new InventarioContext();
    CONEXION_EXT_WEB conn = new CONEXION_EXT_WEB();

    RH00_Usuarios usuario = new RH00_Usuarios();
    string json = await conn.GetQueryResult("SELECT * FROM RH00 WHERE IdEmpleado = " + Model.IdEmpleado.ToString());

    try
    {
        usuario = JsonConvert.DeserializeObject<List<RH00_Usuarios>>(json).FirstOrDefault();
    }
    catch (Exception ex)
    {
        Console.WriteLine(ex.Message);
    }
}

<h1>Usuario: @usuario.Nombres @usuario.Apellidos</h1>
<hr />
<div>
    <a asp-controller="InvHisAsignacionEquipoes" asp-action="Details" asp-route-id="@Model.IdAsignacion">Regresar a la asignación</a>
    @{
        bool isActive;
        isActive = context.InvHisAsignacionEquipos.Where(a => a.Id == Model.IdAsignacion).Select(a => a.Activo).FirstOrDefault();

        if (isActive == true)
        {
            List<int> ususariosIds = new List<int>();
            ususariosIds = context.UsuarioAsignacion.Where(ua => ua.IdAsignacion == Model.IdAsignacion && ua.Asignado == true).Select(ua => ua.IdEmpleado).ToList();
            if (ususariosIds != null && ususariosIds.Count > 1)
            {
                <form method="post" asp-controller="InvHisAsignacionEquipoes" asp-action="FinalizarAsignacionIndividual">
                    <input hidden name="idUsuario" value="@usuario.IdEmpleado" />
                    <input hidden name="idAsignacion" value="@Model.IdAsignacion" />
                    <button class="btn btn-danger" type="submit">Descartar Usuario</button>
                </form>
            }
        }
    }
</div>
<hr />
<div>
    <h4>Datos de Asignación</h4>
    <dl class="row">
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.IdAsignacion)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.IdAsignacion)
        </dd>
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.FechaInicioAsignacion)
        </dt>
        <dd class="col-sm-10">
            <a>@Model.FechaInicioAsignacion.ToString("dddd dd / MMMM / yyyy")</a>
        </dd>
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.FechaFinAsignacion)
        </dt>
        <dd class="col-sm-10">
            @if (Model.FechaFinAsignacion == Convert.ToDateTime("01/01/0001 12:00:00 a. m."))
            {
                <a style="color:darkcyan">Aún no finaliza la asignación</a>
            }
            else
            {
                <a>@Model.FechaFinAsignacion.ToString("dddd dd / MMMM / yyyy")</a>
            }
        </dd>
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.Asignado)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Asignado)
        </dd>
    </dl>
    <hr />
    <h4>Datos de Contacto</h4>
    <dl class="row">
        <dt class="col-sm-4">
            <a>Correo empresa</a>
        </dt>
        <dd class="col-sm-10">
            @{
                if (usuario.CorreoEmpresa == null || usuario.CorreoEmpresa == "")
                {
                    <a>Sin correo empresarial registrado</a>
                }
                else
                {
                    <a href="mailto:@usuario.CorreoEmpresa?Subject=Hola%20,quiero%20tratar%20el%20siguiente%20asunto">@usuario.CorreoEmpresa</a>
                }
            }
        </dd>
        <dt class="col-sm-4">
            <a>Número Telefónico</a>
        </dt>
        <dd class="col-sm-10">
            @if (usuario.TelefonoPersonal != null)
            {
                <a>@usuario.TelefonoPersonal</a>
            }
            else
            {
                <a>Sin número telefonico registrado</a>
            }
        </dd>
    </dl>
</div>
