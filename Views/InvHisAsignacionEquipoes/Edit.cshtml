@using InventarioTI.Context
@using InventarioTI.Models.EXT_WEB
@using InventarioTI.Tools
@using Newtonsoft.Json
@model InventarioTI.Models.InvHisAsignacionEquipo

@{
    ViewData["Title"] = "Edit";
    InventarioContext context = new InventarioContext();
    CONEXION_EXT_WEB conn = new CONEXION_EXT_WEB();    
}

<h4>Editar Asignación</h4>
<div>
    <a asp-action="Details" asp-route-Id="@Model.Id">Regresar a la asignación</a>
</div>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <input type="hidden" asp-for="FechaInicio" />
            <input type="hidden" asp-for="IdEquipo" />
            <input type="hidden" asp-for="Activo" />
            <input type="hidden" asp-for="FechaInicio" />
            <input type="hidden" asp-for="FechaFin" />
            
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input autocomplete="off" onpaste="return false;" class="form-check-input" asp-for="EnDominio" /> @Html.DisplayNameFor(model => model.EnDominio)
                </label>
            </div>
            @*<div class="form-group">
                <label asp-for="TipoConexion" class="control-label"></label>
                <input autocomplete="off" onpaste="return false;" asp-for="TipoConexion" class="form-control" />
                <span asp-validation-for="TipoConexion" class="text-danger"></span>
            </div>*@
             <div class="form-group">
                    <label asp-for="TipoConexion" class="control-label"></label>
                    @*<input asp-for="TipoConexion" class="form-control" />*@
                    @{
                    List<InvCatTipoConexion> tiposConexion = new List<InvCatTipoConexion>();
                    tiposConexion = context.InvCatTiposConexion.ToList();
                    List<SelectListItem> tiposItems = tiposConexion.ConvertAll(a =>
                    {
                        return new SelectListItem()
                {
                    Text = a.TipoConexion,
                    Value = a.TipoConexion,
                    Selected = false
                };
                    });
                }
                <select asp-for="TipoConexion" class="custom-select" asp-items="tiposItems">
                </select>
                <span asp-validation-for="TipoConexion" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="IDSitio" class="control-label"></label>
                @{
                    List<RHCF10_Plantas> catPlantas = new List<RHCF10_Plantas>();

                    string jsonPlantas = await conn.GetQueryResult("SELECT * FROM RHCF10");

                    try
                    {
                        catPlantas = JsonConvert.DeserializeObject<List<RHCF10_Plantas>>(jsonPlantas);
                    }
                    catch (Exception ex)
                    {
                        Console.WriteLine(ex.Message);
                    }

                    List<SelectListItem> plantasItems = catPlantas.ConvertAll(a =>
                    {
                        return new SelectListItem()
                {
                    Text = a.Nombre,
                    Value = a.IDSitio.ToString(),
                    Selected = false
                };
                    });
                }
                <select asp-for="IDSitio" id="pck_planta" onselect="getUsuarios" class="form-control" asp-items="plantasItems"></select>
                <span asp-validation-for="IDSitio" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="ID_Area" class="control-label"></label>
                @{
                    List<RHCF03_Areas> catDepartamentos = new List<RHCF03_Areas>();

                    string jsonDepartamentos = await conn.GetQueryResult("SELECT * FROM RHCF03");

                    try
                    {
                        catDepartamentos = JsonConvert.DeserializeObject<List<RHCF03_Areas>>(jsonDepartamentos);
                    }
                    catch (Exception ex)
                    {
                        Console.WriteLine(ex.Message);
                    }

                    List<SelectListItem> departamentosItems = catDepartamentos.ConvertAll(a =>
                    {
                        return new SelectListItem()
                {
                    Text = a.Area,
                    Value = a.ID_Area.ToString(),
                    Selected = false
                };
                    });
                }
                <select asp-for="ID_Area" id="pck_area" onclick="getUsuarios" class="form-control" asp-items="departamentosItems"></select>
                <span asp-validation-for="ID_Area" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Ip" class="control-label"></label>
                <input autocomplete="off" onpaste="return false;" asp-for="Ip" class="form-control" />
                <span asp-validation-for="Ip" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Actualizar" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }
